{"remainingRequest":"/Users/changzhifeng/s1909/kmall/mobile/node_modules/babel-loader/lib/index.js!/Users/changzhifeng/s1909/kmall/mobile/src/api/index.js","dependencies":[{"path":"/Users/changzhifeng/s1909/kmall/mobile/src/api/index.js","mtime":1572440943592},{"path":"/Users/changzhifeng/s1909/kmall/mobile/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/changzhifeng/s1909/kmall/mobile/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//目标 导出一个对象 对象的属性是方法名,对象的值是方法\nimport axios from 'axios';\nimport { API_CONFIG } from \"./config.js\";\n\nvar getApiObj = function getApiObj(apiConfig) {\n  var apiObj = {};\n\n  var _loop = function _loop(key) {\n    apiObj[key] = function (data) {\n      //处理请求参数\n      var url = apiConfig[key][0] || '';\n      var method = apiConfig[key][1] || 'get';\n      return request(url, method, data);\n    };\n  };\n\n  for (var key in apiConfig) {\n    _loop(key);\n  }\n\n  return apiObj;\n};\n\nvar request = function request(url, method, data) {\n  return new Promise(function (resolve, reject) {\n    var options = {\n      method: method,\n      url: url,\n      withCredentials: true\n    };\n\n    switch (options.method.toUpperCase()) {\n      case 'GET':\n      case 'DELETE':\n        options.params = data;\n        break;\n\n      default:\n        options.data = data;\n    }\n\n    axios(options).then(function (result) {\n      var data = result.data;\n\n      if (data.code == 10) {\n        window.location.href = '/login';\n        reject('用户没有权限');\n      } else {\n        resolve(data);\n      }\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n};\n\nexport default getApiObj(API_CONFIG);",{"version":3,"sources":["/Users/changzhifeng/s1909/kmall/mobile/src/api/index.js"],"names":["axios","API_CONFIG","getApiObj","apiConfig","apiObj","key","data","url","method","request","Promise","resolve","reject","options","withCredentials","toUpperCase","params","then","result","code","window","location","href","catch","err"],"mappings":"AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAQC,UAAR;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAa;AAC3B,MAAMC,MAAM,GAAG,EAAf;;AAD2B,6BAGnBC,GAHmB;AAIvBD,IAAAA,MAAM,CAACC,GAAD,CAAN,GAAc,UAACC,IAAD,EAAQ;AAClB;AACA,UAAIC,GAAG,GAAGJ,SAAS,CAACE,GAAD,CAAT,CAAe,CAAf,KAAqB,EAA/B;AACA,UAAIG,MAAM,GAAGL,SAAS,CAACE,GAAD,CAAT,CAAe,CAAf,KAAqB,KAAlC;AACA,aAAOI,OAAO,CAACF,GAAD,EAAKC,MAAL,EAAYF,IAAZ,CAAd;AACH,KALD;AAJuB;;AAG3B,OAAI,IAAID,GAAR,IAAeF,SAAf,EAAyB;AAAA,UAAjBE,GAAiB;AAOxB;;AAED,SAAOD,MAAP;AACH,CAbD;;AAeA,IAAMK,OAAO,GAAG,SAAVA,OAAU,CAACF,GAAD,EAAKC,MAAL,EAAYF,IAAZ,EAAmB;AAC/B,SAAO,IAAII,OAAJ,CAAY,UAACC,OAAD,EAASC,MAAT,EAAkB;AACjC,QAAMC,OAAO,GAAG;AACZL,MAAAA,MAAM,EAAEA,MADI;AAEZD,MAAAA,GAAG,EAACA,GAFQ;AAGZO,MAAAA,eAAe,EAAC;AAHJ,KAAhB;;AAKA,YAAOD,OAAO,CAACL,MAAR,CAAeO,WAAf,EAAP;AACI,WAAK,KAAL;AACA,WAAK,QAAL;AACIF,QAAAA,OAAO,CAACG,MAAR,GAAiBV,IAAjB;AACA;;AACJ;AACIO,QAAAA,OAAO,CAACP,IAAR,GAAeA,IAAf;AANR;;AAQAN,IAAAA,KAAK,CAACa,OAAD,CAAL,CACCI,IADD,CACM,UAAAC,MAAM,EAAE;AACV,UAAMZ,IAAI,GAAIY,MAAM,CAACZ,IAArB;;AACA,UAAGA,IAAI,CAACa,IAAL,IAAa,EAAhB,EAAmB;AACfC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACAV,QAAAA,MAAM,CAAC,QAAD,CAAN;AACH,OAHD,MAGK;AACDD,QAAAA,OAAO,CAACL,IAAD,CAAP;AACH;AAEJ,KAVD,EAWCiB,KAXD,CAWO,UAAAC,GAAG,EAAE;AACRZ,MAAAA,MAAM,CAACY,GAAD,CAAN;AACH,KAbD;AAcH,GA5BM,CAAP;AA6BH,CA9BD;;AAiCA,eAAetB,SAAS,CAACD,UAAD,CAAxB","sourcesContent":["\n//目标 导出一个对象 对象的属性是方法名,对象的值是方法\n\nimport axios from 'axios'\n\n\nimport {API_CONFIG } from './config.js'\n\nconst getApiObj = (apiConfig)=>{\n    const apiObj = {}\n\n    for(let key in apiConfig){\n        apiObj[key] = (data)=>{\n            //处理请求参数\n            let url = apiConfig[key][0] || ''\n            let method = apiConfig[key][1] || 'get'\n            return request(url,method,data)\n        }\n    }\n\n    return apiObj\n}\n\nconst request = (url,method,data)=>{\n    return new Promise((resolve,reject)=>{\n        const options = {\n            method: method,\n            url:url,\n            withCredentials:true,\n        }\n        switch(options.method.toUpperCase()){\n            case 'GET':\n            case 'DELETE':\n                options.params = data\n                break\n            default:\n                options.data = data\n        }\n        axios(options)\n        .then(result=>{\n            const data  = result.data\n            if(data.code == 10){\n                window.location.href = '/login'\n                reject('用户没有权限')\n            }else{\n                resolve(data)\n            }\n            \n        })\n        .catch(err=>{\n            reject(err)\n        })\n    })\n}\n\n\nexport default getApiObj(API_CONFIG)\n"]}]}